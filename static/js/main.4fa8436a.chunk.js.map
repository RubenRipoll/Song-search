{"version":3,"sources":["logo.svg","pages/Error404.js","components/PrivateRoute.js","helpers/helpHttp.js","components/Loader.js","components/Message.js","components/SongArtist.js","components/SongLyric.js","components/SongDetails.js","pages/SongPage.js","components/SongForm.js","components/SongTableRow.js","components/SongTable.js","components/SongSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Error404","helpHttp","customFetch","endpoint","options","defaultHeader","accept","controller","AbortController","signal","method","headers","body","JSON","stringify","setTimeout","abort","fetch","then","res","ok","json","Promise","reject","err","status","statusText","catch","get","url","post","put","del","Loader","className","Message","msg","styles","padding","marginBottom","textAlign","color","fontWeight","backgroundColor","bgColor","style","dangerouslySetInnerHTML","__html","SongArtist","artist","strArtist","src","strArtistThumb","alt","intBornYear","intDiedYear","strCountry","strGenre","strStyle","href","strWebsite","target","rel","strBiographyEN","SongLyric","title","lyrics","whiteSpace","SongDetails","search","lyric","bio","error","name","song","artists","SongPage","currentSong","mySongs","useParams","id","initialForm","SongForm","handleSearch","handleSaveSong","useState","form","setForm","isDisabled","setIsDisabled","handleChange","e","value","onSubmit","preventDefault","alert","type","placeholder","onChange","onClick","disabled","SongTableRow","el","handleDeleteSong","avatar","history","useHistory","width","height","push","SongTable","colSpan","length","map","index","mySongsInit","parse","localStorage","getItem","SongSearch","setSearch","setLyric","setBio","loading","setLoading","setMySongs","useEffect","fetchData","a","artistUrl","songUrl","console","log","all","artistRes","songRes","setItem","basename","to","exact","path","data","songs","window","confirm","filter","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fa8436a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Error404 = () => {\n    return (\n        <div>\n           <h3>Error 404</h3> \n           <p>Not Found</p>\n        </div>\n    )\n}\n\nexport default Error404\n","import { Redirect, Route } from \"react-router\"\n\n// No exportará un elemento JSX, sino una ruta.\n// const PrivateRoute = (props) => {\n//   return (\n//       <Route exact={props.exact} path={props.path} component={props.component}/>\n//   ) \n// }\n\n// Simplificado ↓\n// const PrivateRoute = (props) => {\n//     return (\n//         <Route {...props}/>\n//     ) \n//   }\n\n  // Simulando una Autenticación ↓\n\n  \n  let auth;\n  auth = null\n  auth = true\n  \n  // Le damos el alias \"Component\" para que lo detecte como un componente y no como sintaxis jsx.\n  const PrivateRoute = ({ component: Component, ...rest }) => {\n    return <Route {...rest}>\n      {auth ? <Component/> : <Redirect to=\"/login\" />}\n    </Route>\n     \n  }\n\nexport default PrivateRoute;\n","export const helpHttp = () => {\n  const customFetch = (endpoint, options) => {\n    const defaultHeader = {\n      accept: \"application/json\"\n    }\n\n    const controller = new AbortController();\n    options.signal = controller.signal;\n\n    options.method = options.method || \"GET\"\n    options.headers = options.headers \n    ? {...defaultHeader, ...options.headers} \n    : defaultHeader;\n\n    options.body = JSON.stringify(options.body) || false\n    if (!options.body) delete options.body\n  \n    //console.log(options)\n    setTimeout(() => controller.abort(), 3000)\n     \n    return fetch(endpoint, options)\n    .then((res) => \n      res.ok \n      ? res.json()\n      : Promise.reject({\n        err:true,\n        status: res.status || \"00\",\n        statusText: res.statusText || \"Ocurrió un error\"\n      })\n    )\n    .catch((err)=>err)\n  }\n\n  const get = (url, options = {}) => customFetch(url, options)  \n\n  const post = (url, options = {}) => {\n    options.method = \"POST\";\n    return customFetch(url,options)\n  }  \n\n  const put = (url, options = {}) => {\n    options.method = \"PUT\";\n    return customFetch(url,options)\n  }  \n\n  const del = (url, options = {}) => {\n    options.method = \"DELETE\";\n    return customFetch(url,options)\n  }  \n\n\n  return {\n    get,\n    post,\n    put,\n    del,\n  }\n}","import React from 'react'\nimport \"./Loader.css\"\n\nconst Loader = () => {\n    return (\n        <div className=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        </div>\n    )\n}\n\nexport default Loader\n","import React from 'react'\n\nconst Message = ({msg, bgColor}) => {\n    let styles = {\n        padding: \"1rem\",\n        marginBottom: \"1rem\",\n        textAlign: \"center\",\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        backgroundColor: bgColor\n    }\n    return (\n        <div style={styles}>\n           {/* <p>{msg}</p> */}\n           <p dangerouslySetInnerHTML={{__html: msg}}/>\n        </div>\n    )\n}\n\nexport default Message;\n","import React from 'react'\n\nconst SongArtist = ({ artist }) => {\n    return (\n        <section>\n           <h3>{artist.strArtist}</h3> \n           <img src={artist.strArtistThumb} alt={artist.strArtist} />\n           <p>\n            {artist.intBornYear} - {artist.intDiedYear || \"Presente\"}\n           </p>\n           <p>{artist.strCountry}</p>\n           <p>\n           {artist.strGenre} - {artist.strStyle}\n           </p>\n           <a href={`http://${artist.strWebsite}`} target=\"_blank\" rel=\"noreferrer\">Sitio Web Oficial</a>\n           <p>{artist.strBiographyEN}</p>\n        </section>\n    )\n}\n\nexport default SongArtist\n","const SongLyric = ({ title, lyrics }) => {\n    return (\n        <section>\n            <h3>{title}</h3>\n            <blockquote style={{ whiteSpace: \"pre-wrap\" }}>{lyrics}</blockquote>\n        </section>\n    )\n}\n\nexport default SongLyric\n","import React from 'react'\nimport Message from \"./Message\"\nimport SongArtist from \"./SongArtist\"\nimport SongLyric from \"./SongLyric\"\n\n\nconst SongDetails = ({ search, lyric, bio }) => {\n    if(!lyric || !bio) return null;\n    return (\n        <>\n            <h2>Detalles</h2>\n            {/* Renderizados Condicionales ↓ */}\n            {lyric.error || lyric.err || lyric.name === \"AbortError\" ? (\n                <Message \n                msg={`Error: no existe la cancion \"<em>${search.song}</em>\"`} \n                bgColor={\"#dc3545\"} /> \n            ) : ( \n            <SongLyric title={search.song} lyrics={lyric.lyrics}/>\n            )}\n            {bio.artists ? <SongArtist artist={bio.artists[0]} /> : <Message \n            msg={`Error: no existe el intérprete \"<em>${search.artist}</em>\"`} \n            bgColor={\"#dc3545\"} \n            />\n            }\n        </>\n    )\n}\n\nexport default SongDetails\n","import { useParams } from \"react-router\"\nimport SongDetails from \"../components/SongDetails\"\n\nconst SongPage = ({ mySongs }) => {\n    let {id} = useParams()\n    // console.log(id, mySongs, mySongs[id])\n\n    let currentSong = mySongs[id]\n    let { search, lyric, bio } = currentSong\n    return <SongDetails search={search} lyric={lyric} bio={bio} />\n}\n\nexport default SongPage;\n","import React, { useState } from 'react'\n\nconst initialForm = {\n    artist: \"\",\n    song: \"\",\n}\n\nconst SongForm = ({handleSearch, handleSaveSong}) => {\n    const [form, setForm] = useState(initialForm)\n    const [isDisabled, setIsDisabled] = useState(true)\n\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if ( !form.artist || !form.song ) {\n            alert(\"Datos Incompletos\")\n            setIsDisabled(true)\n            return;\n        }\n\n        handleSearch(form)\n        setForm(initialForm)\n        setIsDisabled(false)\n    }\n\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" \n                    name=\"artist\" \n                    placeholder=\"Nombre del Intérprete\"  \n                    onChange={handleChange} \n                    value={form.artist}/>\n                <input \n                    type=\"text\" \n                    name=\"song\" \n                    placeholder=\"Nombre de la Canción\" \n                    onChange={handleChange} \n                    value={form.song}/>\n                <input type=\"submit\" value=\"Enviar\" />\n                <input type=\"button\" onClick={handleSaveSong} value=\"Agregar Canción\" disabled={isDisabled && \"disabled\"} />\n            </form>\n        </div>\n    )\n}\n\nexport default SongForm\n","import { useHistory } from \"react-router\"\n\nconst SongTableRow = ({id, el, handleDeleteSong}) => {\n    let { bio, search } = el;\n    let avatar = bio.artists[0].strArtistThumb\n    let avatarStyles = {\n        width: \"auto\",\n        height: \"40px\"\n    }\n\n    let history = useHistory()\n\n    return (\n        <tr>\n            <td>\n                <img style={avatarStyles} src={avatar} alt={search.artist} />\n            </td>\n            <td>{search.artist}</td>\n            <td>{search.song}</td>\n            <td>\n                <button onClick={() => history.push(`/${id}`)}>Ver</button>\n                <button onClick={() => handleDeleteSong(id)}>Eliminar</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default SongTableRow\n","import SongTableRow from \"./SongTableRow\"\n\nconst SongTable = ({ mySongs, handleDeleteSong }) => {\n    return (\n        <div>\n            <h3>Mis Canciones Favoritas</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th colSpan=\"2\">Artista</th>\n                        <th>Canción</th>\n                        <th>Acciones</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {mySongs.length > 0 ? (\n                        mySongs.map((el, index) => <SongTableRow key={index} el={el} id={index} handleDeleteSong={handleDeleteSong} />)\n                        ) : (\n                            <tr>\n                                <td colSpan=\"4\">Sin canciones favoritas</td>\n                            </tr>\n                        )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default SongTable\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Link, Switch, Route } from \"react-router-dom\"\nimport { helpHttp } from \"../helpers/helpHttp\"\nimport SongPage from \"../pages/SongPage\"\nimport Error404 from \"../pages/Error404\"\nimport Loader from \"./Loader\"\nimport SongForm from \"./SongForm\"\nimport SongDetails from \"./SongDetails\"\nimport SongTable from \"./SongTable\"\n\n\nlet mySongsInit = JSON.parse(localStorage.getItem(\"mySongs\")) || [];\n\nconst SongSearch = () => {\n    const [search, setSearch] = useState(null)\n    const [lyric, setLyric] = useState(null)\n    const [bio, setBio] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [mySongs, setMySongs] = useState(mySongsInit) \n\n    useEffect(() => {\n      if(search === null) return;\n\n      const fetchData = async () => {\n          const {artist, song} = search;\n\n          let artistUrl = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${artist}`\n          let songUrl = `https://api.lyrics.ovh/v1/${artist}/${song}`\n\n          console.log(artistUrl, songUrl)\n\n          setLoading(true)\n\n          // Esperamos a ambas peticiones para posteriormente mostrarlas en la UI ↓\n          const [artistRes, songRes] = await Promise.all([\n            helpHttp().get(artistUrl), \n            helpHttp().get(songUrl)\n        ]);\n\n        console.log(artistRes, songRes)\n\n        setBio(artistRes);\n        setLyric(songRes)\n        setLoading(false)  \n      }\n\n      fetchData()\n\n      localStorage.setItem(\"mySongs\", JSON.stringify(mySongs))\n    }, [search, mySongs])\n\n    const handleSearch = (data) => {\n        // console.log(data)\n        setSearch(data)\n    }\n\n    const handleSaveSong = () => {\n      alert(\"Salvando cancion en Favoritos\")\n      let currentSong = {\n        // Si el atributo y el valor se llaman igual, con 1 vez que lo escribamos es suficiente.\n        search,\n        lyric,\n        bio\n      }\n      let songs = [...mySongs, currentSong]\n      setMySongs(songs)\n      setSearch(null)\n      localStorage.setItem(\"mySongs\", JSON.stringify(songs))\n    }\n\n    const handleDeleteSong = (id) => {\n      //alert(`Eliminando canción con el id: ${id}`)\n      let isDelete = window.confirm(`¿Estas seguro de eliminar la cancion con el id \"${id}\"?`)\n\n      if (isDelete) {\n        let songs = mySongs.filter((el, index) => index !== id)\n        setMySongs(songs)\n        localStorage.setItem(\"mySongs\", JSON.stringify(songs))\n      }\n    }\n    \n\n\n    return (\n        <div>    \n          <HashRouter basename=\"canciones\">\n            <header>\n              <h2>Song Search</h2>\n              <Link to=\"/\">Home</Link>\n            </header>\n            {loading && <Loader />}\n            <article className=\"grid-1-2\">\n              <Switch>\n                <Route exact path=\"/\">\n                <SongForm handleSearch={handleSearch} handleSaveSong={handleSaveSong}\n                />\n                <SongTable mySongs={mySongs} handleDeleteSong={handleDeleteSong}/>\n                {search && !loading && (\n                  <SongDetails search={search} lyric={lyric} bio={bio}/>\n                )}\n                </Route>\n                <Route \n                exact \n                path=\"/:id\" \n                children={<SongPage mySongs={mySongs} />}\n                />  \n                <Route path=\"*\" children={<Error404 />} />\n              </Switch>\n            </article>\n          </HashRouter>\n        </div>\n\n    )\n}\nexport default SongSearch","import logo from './logo.svg';\nimport './App.css';\nimport ConceptosBasicos from \"./components/ConceptosBasicos\"\nimport CrudApi from \"./components/CrudApi\"\nimport SongSearch from \"./components/SongSearch\"\n\nfunction App() {\n  return (\n    <div>\n     <h1>React Router</h1>\n     <a href=\"https://reactrouter.com/web/guides/quick-start\" \n     target=\"_blank\" \n     rel=\"noreferrer\"\n     >\n     Documentacion\n     </a>\n     <hr />\n     <SongSearch />\n     <hr />\n     {/* <CrudApi />  */}\n     <hr />\n     {/* <ConceptosBasicos />  */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}